version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
    working_directory: "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
    steps:
      - checkout
      - run:
          name: "Get dependencies"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            go get -v
            dep ensure
            mkdir release
      - run:
          name: "Build MacOS"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            mkdir temp
            export VERSION=$(git log --format=%B -n1)
            export GOOS=darwin
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION" -o temp/gndmq
            cp LICENSE README.md temp/
            cd temp
            zip ../release/qndmq-${GOOS}-${GOARCH}.zip *
            cd ../
            rm -r temp
      - run:
          name: "Build Linux"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            mkdir temp
            export VERSION=$(git log --format=%B -n1)
            export GOOS=linux
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION" -o temp/gndmq
            cp LICENSE README.md temp/
            cd temp
            zip ../release/qndmq-${GOOS}-${GOARCH}.zip *
            cd ../
            rm -r temp
      - run:
          name: "Build Windows"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            mkdir temp
            export VERSION=$(git log --format=%B -n1)
            export GOOS=windows
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION" -o temp/gndmq.exe
            cp LICENSE README.md temp/
            cd temp
            zip ../release/qndmq-${GOOS}-${GOARCH}.zip * 
            cd ../
            rm -r temp               
      - run: 
          name: "Publish to Github"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            go get github.com/tcnksm/ghr
            export VERSION=$(git log --forman=%B -n1)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete $VERSION ./release/*.zip
  test:
    docker:
      - image: circleci/golang:1.12
    working_directory: "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
    steps:
      - checkout
      - run:
          name: "Get dependencies"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            go get -v
            dep ensure
      - run:
          name: "Build MacOS"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            export VERSION=test
            export GOOS=darwin
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION"
      - run:
          name: "Build Linux"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            export VERSION=test
            export GOOS=linux
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION"
      - run:
          name: "Build Windows"
          command: |
            cd "$GOPATH/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            export VERSION=test
            export GOOS=windows
            export GOARCH=amd64
            go build -ldflags "-X main.Version=$VERSION"
workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:
            branches:
              only: release
  build-and-test:
    jobs:
      - test:
          filters:
            branches:
              only: master
